---
const currentPath = Astro.url.pathname;
const siteName = import.meta.env.PUBLIC_SITE_NAME || "Example Co.";

const navItems = [
	{ name: "Home", href: "/" },
	{ name: "Services", href: "/services" },
	{ name: "About", href: "/about" },
	{ name: "Contact", href: "/contact" },
];
---

<nav class="bg-white shadow-sm border-b">
  <div class="container mx-auto px-6 py-4">
    <div class="flex justify-between items-center">
      <a href="/" class="text-xl font-bold text-gray-900">
        {siteName}
      </a>
      
      <!-- Desktop Navigation -->
      <div class="hidden md:flex space-x-8">
        {navItems.map((item) => (
          <a 
            href={item.href}
            class={`text-sm font-medium transition-colors hover:text-primary ${
              currentPath === item.href 
                ? "text-primary border-b-2 border-primary pb-1" 
                : "text-gray-600"
            }`}
          >
            {item.name}
          </a>
        ))}
      </div>
      
      <!-- Mobile Menu Button -->
      <button 
        id="mobile-menu-button"
        class="md:hidden flex flex-col space-y-1 p-2"
        aria-label="Toggle navigation menu"
        aria-expanded="false"
      >
        <span class="w-6 h-0.5 bg-gray-600 transition-all duration-200"></span>
        <span class="w-6 h-0.5 bg-gray-600 transition-all duration-200"></span>
        <span class="w-6 h-0.5 bg-gray-600 transition-all duration-200"></span>
      </button>
    </div>
    
    <!-- Mobile Navigation -->
    <div id="mobile-menu" class="md:hidden hidden mt-4 border-t pt-4">
      {navItems.map((item) => (
        <a 
          href={item.href}
          class={`block py-2 text-sm font-medium transition-colors hover:text-primary ${
            currentPath === item.href ? "text-primary" : "text-gray-600"
          }`}
        >
          {item.name}
        </a>
      ))}
    </div>
  </div>
</nav>

<script>
  const button = document.getElementById('mobile-menu-button');
  const menu = document.getElementById('mobile-menu');
  
  button?.addEventListener('click', () => {
    const isExpanded = button.getAttribute('aria-expanded') === 'true';
    button.setAttribute('aria-expanded', String(!isExpanded));
    menu?.classList.toggle('hidden');
  });
</script>